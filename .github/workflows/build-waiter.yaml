name: Build Waiter

on:
  workflow_run:
    workflows: [Terraform]
    types:
      - completed

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Init
        run: cd terraform-builder && terraform init

      - name: Terraform destroy if apply failure
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        run: cd terraform-builder && terraform destroy -auto-approve -input=false

      - name: Collect CI outputs from Terraform
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        id: outputs
        run: |
          cd terraform-builder
          echo "aws_access_key_id=$(terraform output -raw ci_aws_access_key_id)" >> $GITHUB_OUTPUT
          echo "aws_secret_access_key=$(terraform output -raw ci_aws_secret_access_key)" >> $GITHUB_OUTPUT
          echo "s3_outputs<<EOF" >> $GITHUB_OUTPUT
          echo "$(terraform output -json s3_outputs)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "chrome_version=$(terraform output -raw chrome_version)" >> $GITHUB_OUTPUT
          echo "bucket_name=$(terraform output -raw bucket_name)" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Wait for S3 outputs
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.outputs.outputs.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.outputs.outputs.aws_secret_access_key }}
          S3_OUTPUTS: ${{ steps.outputs.outputs.s3_outputs }}
          BUCKET_NAME: ${{ steps.outputs.outputs.bucket_name }}
        run: |
          echo "${S3_OUTPUTS}" > output.json
          while read i
          do
              S3_OUTPUT=$(echo $i | jq -r .)
              tail=${S3_OUTPUT##*-}
              arch=${tail%".apk.xz"}
              if [ "$arch" == "x64" ]
              then
                arch=x86_64
              fi

              while aws s3api head-object --bucket "${BUCKET_NAME}" --key "${S3_OUTPUT}"; ss=$?; [[ $ss -ne 0 ]]
              do
                echo "Waiting for s3://${BUCKET_NAME}/${S3_OUTPUT}"
                sleep 3
              done
              aws s3 cp "s3://${BUCKET_NAME}/${S3_OUTPUT}" "./prebuilt/${arch}/webview.apk.xz"
          done <<< "$(jq -c '.[]' output.json)"
        continue-on-error: true
        timeout-minutes: 240

      - name: Terraform Destroy
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        run: cd terraform-builder && terraform destroy -auto-approve -input=false

      - name: Setup GPG key
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Push to Gerrit
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        env:
          GERRIT_PUSH_PRIVATE_KEY_B64: ${{ secrets.GERRIT_PUSH_PRIVATE_KEY_B64 }}
          CHROME_VERSION: ${{ steps.outputs.outputs.chrome_version }}
        run: |
          echo "$GERRIT_PUSH_PRIVATE_KEY_B64" | base64 -d > gerrit.pem
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          mv gerrit.pem ~/.ssh
          chmod 400 ~/.ssh/gerrit.pem

          git config user.name "CarbonROM Webview CI Bot"
          git config user.email "carbonrom_webview_ci_bot@mcswain.dev"
          git config user.signingkey CA037F9A5346B3BC93D07696A1FC71D1C08112FD
          git config commit.gpgsign true
          git config push.gpgsign true
          git config review.review.carbonrom.org.username "CarbonROM-Webview-CI-Bot"

          git add prebuilt/
          git commit -m "Update APKs to $CHROME_VERSION"
          git push ssh://review.carbonrom.org:29418/CarbonROM/android_external_chromium-webview HEAD:refs/for/${GITHUB_REF##*/}
